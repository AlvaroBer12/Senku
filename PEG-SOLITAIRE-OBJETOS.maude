mod PEG-SOLITAIRE-OBJETOS is
    protecting NAT .

    sort Board Ficha .
    subsort Ficha < Board .

    ops x o : Nat Nat -> Ficha [ctor] .

    op nilL : -> Board [ctor] .
    op __ : Board Board -> Board [assoc ctor id: nilL] .

    var B B2 : Board .
    vars N M : Nat .

    op count : Board -> Nat .
    eq count(x(N,M)) = 1 .
    eq count(o(N,M)) = 0 .
    eq count(B B2) = count(B) + count(B2) .

    vars rows columns x1 y1 auxRows auxColumns : Nat .
    
    op createRow : Nat Nat Nat -> Board .
    eq createRow(auxRows,columns, auxColumns) = if auxColumns == columns then x(auxRows,auxColumns) else x(auxRows,auxColumns) createRow(auxRows, columns, s auxColumns) fi .

    op createBoard : Nat Nat Nat -> Board .
    eq createBoard(rows, columns, auxRows) = if auxRows == rows then (createRow(auxRows,columns, 1)) else (createRow(auxRows,columns, 1)) ( createBoard(rows, columns, s auxRows) ) fi .

    op initial : Nat Nat -> Board .
    eq initial(rows,columns) = createBoard(rows, columns, 1) .

    op searchLibre : Board Nat Nat -> Board .
    eq searchLibre(nilL, x1, y1) = nilL .
    eq searchLibre((x(N,M) B2), x1, y1) = if N == x1 and M == y1 then o(N,M) B2 else x(N,M) searchLibre(B2, x1, y1) fi .

    op libre : Board Nat Nat -> Board .
    eq libre (B, x1, y1) = searchLibre(B, x1, y1) .  

    op four : -> Board .
    eq four = x(0,0) x(0,1) x(0,2) x(0,3)
              x(1,0) x(1,1) x(1,2) x(1,3)
              x(2,0) x(2,1) x(2,2) o(2,3)
              x(3,0) x(3,1) x(3,2) x(3,3) .

    op five : -> Board .
    eq five = x(0,0) x(0,1) x(0,2) x(0,3) x(0,4)
              x(1,0) x(1,1) x(1,2) x(1,3) x(1,4)
              x(2,0) x(2,1) x(2,2) x(2,3) x(2,4)
              x(3,0) x(3,1) x(3,2) x(3,3) o(3,4)
              x(4,0) x(4,1) x(4,2) x(4,3) x(4,4) .

    rl [right] : x(M,N) x(M, s N) o(M, s s N) => o(M,N) o(M, s N) x(M, s s N) .
    rl [left] : o(M,N) x(M, s N) x(M, s s N) => x(M,N) o(M, s N) o(M, s s N) .
    rl [down] : x(M,N) x(s M,N) o(s s M,N) => o(M,N) o(s M,N) x(s s M,N) .
    rl [up] : o(M,N) x(s M,N) x(s s M,N) => x(M,N) o(s M,N) o(s s M,N) .
endm