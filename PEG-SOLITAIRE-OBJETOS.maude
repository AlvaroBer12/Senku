omod PEG-SOLITAIRE-OBJETOS is
    including NAT .

    class Ficha | x : Nat, y : Nat .

    class Libre | x : Nat, y : Nat .

    subsort Nat < Oid .

    vars M N x1 y1 z : Nat .
    vars C C1 : Configuration .
    var O : Object .

    op countOid : Cid -> Nat .
    eq countOid(Ficha) = s 0 .
    eq countOid(Libre) = 0 .

    op count : Configuration -> Nat .
    eq count(O) = countOid(getClass(O)) .
    eq count(O C1) = countOid(getClass(O)) + count(C1) .

    op indice : Nat Nat -> Nat .
    eq indice(M, N) = M * N + N .

    vars rows columns auxRows auxColumns : Nat . 

    op createFicha : Nat Nat -> Object .
    eq createFicha(M, N) = < (indice(M, N)) : Ficha | x : M, y : N > .

    op createLibre : Nat Nat -> Object .
    eq createLibre(M, N) = < (indice(M, N)) : Libre | x : M, y : N > .

    op createRow : Nat Nat Nat -> Configuration .
    eq createRow(columns, auxColumns, auxRows) = if auxColumns == columns then createFicha(auxRows, auxColumns)  
    else createFicha(auxRows, auxColumns) createRow(columns, s auxColumns, auxRows) fi .

    op createBoard : Nat Nat Nat -> Configuration .
    eq createBoard(rows, columns, auxRows) = if auxRows == rows then createRow(columns, 1, auxRows) else (createRow(columns, 1, auxRows)) ( createBoard(rows, columns, s auxRows) ) fi .

    op initial : Nat Nat -> Configuration .
    eq initial(M , N) = createBoard(M , N, 1) .

    op compare : Object Nat Nat -> Bool .
    eq compare((< z : Ficha | x : x1, y : y1 >), M, N) = if z == indice(M,N) then true else false fi .

    op libre : Configuration Nat Nat  -> Configuration .
    eq libre(O, M, N) = if compare(O,M,N) == true then createLibre(M,N) else O fi .
    eq libre((O C1), M, N) = if compare(O,M,N) == true then createLibre(M,N) C1 else O libre(C1, M, N) fi .

    vars y t r : Nat .

    rl [right] : < y : Ficha | x : M, y : N > < t : Ficha | x : M , y : s N > < r : Libre | x : M , y : s s N > 
    => < y : Libre | x : M, y : N > < t : Libre | x : M , y : s N > < r : Ficha | x : M , y : s s N > .

    rl [left] : < y : Libre | x : M, y : N > < t : Ficha | x : M , y : s N > < r : Ficha | x : M , y : s s N >
    => < y : Ficha | x : M, y : N > < t : Libre | x : M , y : s N > < r : Libre | x : M , y : s s N > .

    rl [down] : < y : Ficha | x : M, y : N > < t : Ficha | x : s M , y : N > < r : Libre | x : s s M , y : N >
    => < y : Libre | x : M, y : N > < t : Libre | x : s M , y : N > < r : Ficha | x : s s M , y : N > .

    rl [up] : < y : Libre | x : M, y : N > < t : Ficha | x : s M , y : N > < r : Ficha | x : s s M , y : N >
    => < y : Ficha | x : M, y : N > < t : Libre | x : s M , y : N > < r : Libre | x : s s M , y : N > .
endom